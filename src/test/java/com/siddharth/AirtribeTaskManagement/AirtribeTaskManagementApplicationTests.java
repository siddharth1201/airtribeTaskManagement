package com.siddharth.AirtribeTaskManagement;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.ActiveProfiles;

import com.siddharth.AirtribeTaskManagement.dto.TaskRequestDTO;
import com.siddharth.AirtribeTaskManagement.dto.TaskResponseDTO;
import com.siddharth.AirtribeTaskManagement.entity.Task;
import com.siddharth.AirtribeTaskManagement.enums.Priority;
import com.siddharth.AirtribeTaskManagement.enums.TaskStatus;

@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
class AirtribeTaskManagementApplicationTests {


    @Autowired
    private TestRestTemplate restTemplate;

    @Test
    void contextLoads() {
        // This default test ensures that the application context can start successfully.
        // It's a good basic sanity check.
    }

    @Test
    public void testCreateAndGetTask() {
        // === Part 1: CREATE a new Task ===

        // 1. Arrange: Create a task object to send in the request body.
    // Set dueDate to 1 day in the future
    java.util.Date futureDate = new java.util.Date(System.currentTimeMillis() + 86400000L);
    TaskRequestDTO newTask = new TaskRequestDTO("Integration Test Task", "Createdasdfasdfasdfasdf via API", TaskStatus.TODO, Priority.HIGH, futureDate);

        ResponseEntity<TaskResponseDTO> createResponse = restTemplate.postForEntity("/tasks", newTask, TaskResponseDTO.class);

        assertEquals(HttpStatus.CREATED, createResponse.getStatusCode()); // Expect HTTP 201 Created
        TaskResponseDTO createdTask = createResponse.getBody();
        assertNotNull(createdTask);
        assertNotNull(createdTask.getId()); // The ID should be generated by the database.
        assertEquals("Integration Test Task", createdTask.getName());


      
        ResponseEntity<Task[]> getResponse = restTemplate.getForEntity("/tasks", Task[].class);
        
        // 3. Assert: Verify the GET request was successful and contains our new task.
        assertEquals(HttpStatus.OK, getResponse.getStatusCode()); // Expect HTTP 200 OK
        Task[] tasks = getResponse.getBody();
        assertNotNull(tasks);
        assertEquals(1, tasks.length); // Assuming the database is clean before this test
        assertEquals("Integration Test Task", tasks[0].getName());
        assertEquals(TaskStatus.TODO, tasks[0].getStatus());
    }
}